buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'net.ltgt.errorprone' version '0.0.11'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'checkstyle'

checkstyle {
	toolVersion = "8.2"
}

group = 'com.ao'
version = '0.2.0'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

ext {
  springBootAdminVersion = '2.0.2'
	springCloudVersion = 'Finchley.SR1'
}

configurations {
  all*.exclude module : 'spring-boot-starter-logging'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
  compile('org.springframework.boot:spring-boot-starter-log4j2')
  compile 'org.springframework.boot:spring-boot-starter-security:1.5.6.RELEASE'

	compile('org.springframework.cloud:spring-cloud-starter-consul-discovery')
  compile('org.springframework.cloud:spring-cloud-starter-consul-config')
	compile('org.springframework.cloud:spring-cloud-starter-netflix-zuul')

  compile('org.springframework.retry:spring-retry')

  compile('org.springframework.cloud:spring-cloud-starter-vault-config')
  compile('org.springframework.cloud:spring-cloud-vault-config-consul')

  compile 'com.auth0:mvc-auth-commons:1.+'

  runtime 'org.apache.tomcat.embed:tomcat-embed-jasper:8.5.20'
	runtime('org.springframework.boot:spring-boot-devtools')
  runtime 'org.springframework.boot:spring-boot-starter-tomcat:1.5.6.RELEASE'
  runtime 'org.springframework.security:spring-security-taglibs:4.2.3.RELEASE'
  runtime 'javax.servlet:jstl:1.2'

	testCompile('org.springframework.boot:spring-boot-starter-test')
  errorprone 'com.google.errorprone:error_prone_core:2.2.0'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation"
		options.compilerArgs += [ '-Xep:ParameterName:OFF' ]
}

dependencyManagement {
	imports {
    mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
